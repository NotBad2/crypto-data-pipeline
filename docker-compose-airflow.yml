version: '3.8'

services:
  # Simple PostgreSQL for Airflow
  airflow-db:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5433:5432"
    volumes:
      - airflow_db_data:/var/lib/postgresql/data
    networks:
      - crypto-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main PostgreSQL for crypto data
  crypto-db:
    image: postgres:13
    environment:
      POSTGRES_USER: crypto_user
      POSTGRES_PASSWORD: crypto_pass
      POSTGRES_DB: crypto_data
    ports:
      - "5432:5432"
    volumes:
      - crypto_db_data:/var/lib/postgresql/data
    networks:
      - crypto-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crypto_user -d crypto_data"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crypto-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Apache Airflow Init
  airflow-init:
    image: apache/airflow:2.7.0-python3.11
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=your_secret_key_here
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
    depends_on:
      - airflow-db
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    networks:
      - crypto-network

  # Apache Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.7.0-python3.11
    command: webserver
    depends_on:
      - airflow-db
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=your_secret_key_here
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
    ports:
      - "8080:8080"
    networks:
      - crypto-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Apache Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.7.0-python3.11
    command: scheduler
    depends_on:
      - airflow-db
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs
      - ./data:/opt/airflow/data
    networks:
      - crypto-network

volumes:
  airflow_db_data:
  crypto_db_data:
  redis_data:
  airflow_logs:

networks:
  crypto-network:
    driver: bridge
